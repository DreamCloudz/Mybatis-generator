<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
  <properties resource="jdbc.properties"></properties>
  <!--mysql 连接数据库jar 这里选择自己本地位置-->
  <!--<classPathEntry location="${mysql_classPath}"/>-->

  <context id="testTables" targetRuntime="MyBatis3">

    <!--添加分页插件-->
    <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"></plugin>
    <!--<plugin type="com.dsz.util.plugin.PaginationPlugin"/>-->

    <commentGenerator>
      <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
      <property name="suppressAllComments" value="false"/>
      <!--是否去除自动生成的注释包含时间戳 true：是： false:否 -->
      <property name="suppressDate" value="true"/>
    </commentGenerator>
    <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
    <jdbcConnection driverClass="${mysql_driver}"
                    connectionURL="${mysql_url}"
                    userId="${mysql_username}"
                    password="${mysql_password}">
    </jdbcConnection>
    <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
       NUMERIC 类型解析为java.math.BigDecimal -->
    <javaTypeResolver>
      <property name="forceBigDecimals" value="false"/>
    </javaTypeResolver>

    <!-- targetProject:生成PO类的位置 -->
    <javaModelGenerator targetPackage="com.${projectPackage}.domain" targetProject="${targetProject}">
      <!-- enableSubPackages:是否让schema作为包的后缀 -->
      <property name="enableSubPackages" value="true"/>
      <!-- 从数据库返回的值被清理前后的空格 -->
      <property name="trimStrings" value="true"/>
      <!--设置一个根对象-->
      <!--<property name="rootClass" value="com.ts.model.BaseVO"/>-->
    </javaModelGenerator>
    <!-- targetProject:mapper映射文件生成的位置
       如果maven工程只是单独的一个工程，targetProject="src/main/java"
       若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
       targetProject="ecps-manager-mapper"，下同-->

    <sqlMapGenerator targetPackage="mybatis.${modelName}"
                     targetProject="${targetProject}">
      <!-- enableSubPackages:是否让schema作为包的后缀 -->
      <property name="enableSubPackages" value="true"/>
    </sqlMapGenerator>

    <!-- targetPackage：mapper接口生成的位置 -->
    <javaClientGenerator type="XMLMAPPER"
                         targetPackage="com.${projectPackage}.dao"
                         targetProject="${targetProject}">
      <!-- enableSubPackages:是否让schema作为包的后缀 -->
      <property name="enableSubPackages" value="true"/>
    </javaClientGenerator>
    <!-- 指定数据库表 -->
    <!--<table schema="system" tableName="user" domainObjectName="User" mapperName="UserMapper">-->
    <!--&lt;!&ndash;生成的字段名称与数据库中名称一致&ndash;&gt;-->
    <!--<property name="useActualColumnNames" value="true"/>-->
    <!--</table>-->

    <!--    <table schema="" tableName="aep_sim_param">
          &lt;!&ndash;生成的字段名称与数据库中名称一致&ndash;&gt;
          <property name="useActualColumnNames" value="true"/>
        </table>-->

    <!--    <table schema="" tableName="aep_solver">
          &lt;!&ndash;生成的字段名称与数据库中名称一致&ndash;&gt;
          <property name="useActualColumnNames" value="true"/>
        </table>-->

    <table schema="" tableName="${targetTable}">
      <!--生成的字段名称与数据库中名称一致-->
      <property name="useActualColumnNames" value="true"/>

      <!--将text类型的字段，生成代码是转换为varchar类型-->
      <columnOverride column="settingsInfo" jdbcType="VARCHAR"/>
      <columnOverride column="resultInfo" jdbcType="VARCHAR"/>
    </table>

  </context>
</generatorConfiguration>